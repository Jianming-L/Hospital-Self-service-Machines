#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Hospital_Self_service_Machines
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="医院自助服务机")]
	public partial class Hospital_Self_service_MachinesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void Inserttb_City(tb_City instance);
    partial void Updatetb_City(tb_City instance);
    partial void Deletetb_City(tb_City instance);
    partial void Inserttb_Country(tb_Country instance);
    partial void Updatetb_Country(tb_Country instance);
    partial void Deletetb_Country(tb_Country instance);
    partial void Inserttb_Department(tb_Department instance);
    partial void Updatetb_Department(tb_Department instance);
    partial void Deletetb_Department(tb_Department instance);
    partial void Inserttb_DepartmentDetail(tb_DepartmentDetail instance);
    partial void Updatetb_DepartmentDetail(tb_DepartmentDetail instance);
    partial void Deletetb_DepartmentDetail(tb_DepartmentDetail instance);
    partial void Inserttb_EthnicGroup(tb_EthnicGroup instance);
    partial void Updatetb_EthnicGroup(tb_EthnicGroup instance);
    partial void Deletetb_EthnicGroup(tb_EthnicGroup instance);
    partial void Inserttb_DocumentationInformation(tb_DocumentationInformation instance);
    partial void Updatetb_DocumentationInformation(tb_DocumentationInformation instance);
    partial void Deletetb_DocumentationInformation(tb_DocumentationInformation instance);
    partial void Inserttb_ExpertInfo(tb_ExpertInfo instance);
    partial void Updatetb_ExpertInfo(tb_ExpertInfo instance);
    partial void Deletetb_ExpertInfo(tb_ExpertInfo instance);
    partial void Inserttb_Nation(tb_Nation instance);
    partial void Updatetb_Nation(tb_Nation instance);
    partial void Deletetb_Nation(tb_Nation instance);
    partial void Inserttb_Province(tb_Province instance);
    partial void Updatetb_Province(tb_Province instance);
    partial void Deletetb_Province(tb_Province instance);
    partial void Inserttb_RegisterdTime(tb_RegisterdTime instance);
    partial void Updatetb_RegisterdTime(tb_RegisterdTime instance);
    partial void Deletetb_RegisterdTime(tb_RegisterdTime instance);
    partial void Inserttb_SymptomStype(tb_SymptomStype instance);
    partial void Updatetb_SymptomStype(tb_SymptomStype instance);
    partial void Deletetb_SymptomStype(tb_SymptomStype instance);
    partial void Inserttb_User(tb_User instance);
    partial void Updatetb_User(tb_User instance);
    partial void Deletetb_User(tb_User instance);
    #endregion
		
		public Hospital_Self_service_MachinesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["医院自助服务机ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public Hospital_Self_service_MachinesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Hospital_Self_service_MachinesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Hospital_Self_service_MachinesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Hospital_Self_service_MachinesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tb_CheckDateInformation> tb_CheckDateInformation
		{
			get
			{
				return this.GetTable<tb_CheckDateInformation>();
			}
		}
		
		public System.Data.Linq.Table<tb_City> tb_City
		{
			get
			{
				return this.GetTable<tb_City>();
			}
		}
		
		public System.Data.Linq.Table<tb_Country> tb_Country
		{
			get
			{
				return this.GetTable<tb_Country>();
			}
		}
		
		public System.Data.Linq.Table<tb_Department> tb_Department
		{
			get
			{
				return this.GetTable<tb_Department>();
			}
		}
		
		public System.Data.Linq.Table<tb_DepartmentDetail> tb_DepartmentDetail
		{
			get
			{
				return this.GetTable<tb_DepartmentDetail>();
			}
		}
		
		public System.Data.Linq.Table<tb_DoctorInfo> tb_DoctorInfo
		{
			get
			{
				return this.GetTable<tb_DoctorInfo>();
			}
		}
		
		public System.Data.Linq.Table<tb_EthnicGroup> tb_EthnicGroup
		{
			get
			{
				return this.GetTable<tb_EthnicGroup>();
			}
		}
		
		public System.Data.Linq.Table<tb_DocumentationInformation> tb_DocumentationInformation
		{
			get
			{
				return this.GetTable<tb_DocumentationInformation>();
			}
		}
		
		public System.Data.Linq.Table<tb_ExpertInfo> tb_ExpertInfo
		{
			get
			{
				return this.GetTable<tb_ExpertInfo>();
			}
		}
		
		public System.Data.Linq.Table<tb_ItemInformation> tb_ItemInformation
		{
			get
			{
				return this.GetTable<tb_ItemInformation>();
			}
		}
		
		public System.Data.Linq.Table<tb_LimitCount> tb_LimitCount
		{
			get
			{
				return this.GetTable<tb_LimitCount>();
			}
		}
		
		public System.Data.Linq.Table<tb_Nation> tb_Nation
		{
			get
			{
				return this.GetTable<tb_Nation>();
			}
		}
		
		public System.Data.Linq.Table<tb_PatientCheckInformation> tb_PatientCheckInformation
		{
			get
			{
				return this.GetTable<tb_PatientCheckInformation>();
			}
		}
		
		public System.Data.Linq.Table<tb_Payment> tb_Payment
		{
			get
			{
				return this.GetTable<tb_Payment>();
			}
		}
		
		public System.Data.Linq.Table<tb_Price> tb_Price
		{
			get
			{
				return this.GetTable<tb_Price>();
			}
		}
		
		public System.Data.Linq.Table<tb_Province> tb_Province
		{
			get
			{
				return this.GetTable<tb_Province>();
			}
		}
		
		public System.Data.Linq.Table<tb_Registerd> tb_Registerd
		{
			get
			{
				return this.GetTable<tb_Registerd>();
			}
		}
		
		public System.Data.Linq.Table<tb_RegisterdCancelCount> tb_RegisterdCancelCount
		{
			get
			{
				return this.GetTable<tb_RegisterdCancelCount>();
			}
		}
		
		public System.Data.Linq.Table<tb_RegisterdTime> tb_RegisterdTime
		{
			get
			{
				return this.GetTable<tb_RegisterdTime>();
			}
		}
		
		public System.Data.Linq.Table<tb_Symptom> tb_Symptom
		{
			get
			{
				return this.GetTable<tb_Symptom>();
			}
		}
		
		public System.Data.Linq.Table<tb_SymptomStype> tb_SymptomStype
		{
			get
			{
				return this.GetTable<tb_SymptomStype>();
			}
		}
		
		public System.Data.Linq.Table<tb_User> tb_User
		{
			get
			{
				return this.GetTable<tb_User>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tb_CheckDateInformation")]
	public partial class tb_CheckDateInformation
	{
		
		private string _UserNo;
		
		private System.DateTime _CheckTime;
		
		private string _DoctorCheckName;
		
		public tb_CheckDateInformation()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserNo", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string UserNo
		{
			get
			{
				return this._UserNo;
			}
			set
			{
				if ((this._UserNo != value))
				{
					this._UserNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckTime", DbType="Date NOT NULL")]
		public System.DateTime CheckTime
		{
			get
			{
				return this._CheckTime;
			}
			set
			{
				if ((this._CheckTime != value))
				{
					this._CheckTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorCheckName", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string DoctorCheckName
		{
			get
			{
				return this._DoctorCheckName;
			}
			set
			{
				if ((this._DoctorCheckName != value))
				{
					this._DoctorCheckName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tb_City")]
	public partial class tb_City : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _No;
		
		private string _CityName;
		
		private int _ProvinceNo;
		
		private EntitySet<tb_Country> _tb_Country;
		
		private EntityRef<tb_Province> _tb_Province;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNoChanging(int value);
    partial void OnNoChanged();
    partial void OnCityNameChanging(string value);
    partial void OnCityNameChanged();
    partial void OnProvinceNoChanging(int value);
    partial void OnProvinceNoChanged();
    #endregion
		
		public tb_City()
		{
			this._tb_Country = new EntitySet<tb_Country>(new Action<tb_Country>(this.attach_tb_Country), new Action<tb_Country>(this.detach_tb_Country));
			this._tb_Province = default(EntityRef<tb_Province>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int No
		{
			get
			{
				return this._No;
			}
			set
			{
				if ((this._No != value))
				{
					this.OnNoChanging(value);
					this.SendPropertyChanging();
					this._No = value;
					this.SendPropertyChanged("No");
					this.OnNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityName", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string CityName
		{
			get
			{
				return this._CityName;
			}
			set
			{
				if ((this._CityName != value))
				{
					this.OnCityNameChanging(value);
					this.SendPropertyChanging();
					this._CityName = value;
					this.SendPropertyChanged("CityName");
					this.OnCityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvinceNo", DbType="Int NOT NULL")]
		public int ProvinceNo
		{
			get
			{
				return this._ProvinceNo;
			}
			set
			{
				if ((this._ProvinceNo != value))
				{
					if (this._tb_Province.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProvinceNoChanging(value);
					this.SendPropertyChanging();
					this._ProvinceNo = value;
					this.SendPropertyChanged("ProvinceNo");
					this.OnProvinceNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tb_City_tb_Country", Storage="_tb_Country", ThisKey="No", OtherKey="CityNo")]
		public EntitySet<tb_Country> tb_Country
		{
			get
			{
				return this._tb_Country;
			}
			set
			{
				this._tb_Country.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tb_Province_tb_City", Storage="_tb_Province", ThisKey="ProvinceNo", OtherKey="No", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public tb_Province tb_Province
		{
			get
			{
				return this._tb_Province.Entity;
			}
			set
			{
				tb_Province previousValue = this._tb_Province.Entity;
				if (((previousValue != value) 
							|| (this._tb_Province.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tb_Province.Entity = null;
						previousValue.tb_City.Remove(this);
					}
					this._tb_Province.Entity = value;
					if ((value != null))
					{
						value.tb_City.Add(this);
						this._ProvinceNo = value.No;
					}
					else
					{
						this._ProvinceNo = default(int);
					}
					this.SendPropertyChanged("tb_Province");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tb_Country(tb_Country entity)
		{
			this.SendPropertyChanging();
			entity.tb_City = this;
		}
		
		private void detach_tb_Country(tb_Country entity)
		{
			this.SendPropertyChanging();
			entity.tb_City = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tb_Country")]
	public partial class tb_Country : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _No;
		
		private string _CountryName;
		
		private int _CityNo;
		
		private EntityRef<tb_City> _tb_City;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNoChanging(int value);
    partial void OnNoChanged();
    partial void OnCountryNameChanging(string value);
    partial void OnCountryNameChanged();
    partial void OnCityNoChanging(int value);
    partial void OnCityNoChanged();
    #endregion
		
		public tb_Country()
		{
			this._tb_City = default(EntityRef<tb_City>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int No
		{
			get
			{
				return this._No;
			}
			set
			{
				if ((this._No != value))
				{
					this.OnNoChanging(value);
					this.SendPropertyChanging();
					this._No = value;
					this.SendPropertyChanged("No");
					this.OnNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryName", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string CountryName
		{
			get
			{
				return this._CountryName;
			}
			set
			{
				if ((this._CountryName != value))
				{
					this.OnCountryNameChanging(value);
					this.SendPropertyChanging();
					this._CountryName = value;
					this.SendPropertyChanged("CountryName");
					this.OnCountryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityNo", DbType="Int NOT NULL")]
		public int CityNo
		{
			get
			{
				return this._CityNo;
			}
			set
			{
				if ((this._CityNo != value))
				{
					if (this._tb_City.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCityNoChanging(value);
					this.SendPropertyChanging();
					this._CityNo = value;
					this.SendPropertyChanged("CityNo");
					this.OnCityNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tb_City_tb_Country", Storage="_tb_City", ThisKey="CityNo", OtherKey="No", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public tb_City tb_City
		{
			get
			{
				return this._tb_City.Entity;
			}
			set
			{
				tb_City previousValue = this._tb_City.Entity;
				if (((previousValue != value) 
							|| (this._tb_City.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tb_City.Entity = null;
						previousValue.tb_Country.Remove(this);
					}
					this._tb_City.Entity = value;
					if ((value != null))
					{
						value.tb_Country.Add(this);
						this._CityNo = value.No;
					}
					else
					{
						this._CityNo = default(int);
					}
					this.SendPropertyChanged("tb_City");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tb_Department")]
	public partial class tb_Department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DepartmentNo;
		
		private string _DepartmentName;
		
		private EntitySet<tb_DepartmentDetail> _tb_DepartmentDetail;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDepartmentNoChanging(int value);
    partial void OnDepartmentNoChanged();
    partial void OnDepartmentNameChanging(string value);
    partial void OnDepartmentNameChanged();
    #endregion
		
		public tb_Department()
		{
			this._tb_DepartmentDetail = new EntitySet<tb_DepartmentDetail>(new Action<tb_DepartmentDetail>(this.attach_tb_DepartmentDetail), new Action<tb_DepartmentDetail>(this.detach_tb_DepartmentDetail));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DepartmentNo
		{
			get
			{
				return this._DepartmentNo;
			}
			set
			{
				if ((this._DepartmentNo != value))
				{
					this.OnDepartmentNoChanging(value);
					this.SendPropertyChanging();
					this._DepartmentNo = value;
					this.SendPropertyChanged("DepartmentNo");
					this.OnDepartmentNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this.OnDepartmentNameChanging(value);
					this.SendPropertyChanging();
					this._DepartmentName = value;
					this.SendPropertyChanged("DepartmentName");
					this.OnDepartmentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tb_Department_tb_DepartmentDetail", Storage="_tb_DepartmentDetail", ThisKey="DepartmentNo", OtherKey="DepartmentNo")]
		public EntitySet<tb_DepartmentDetail> tb_DepartmentDetail
		{
			get
			{
				return this._tb_DepartmentDetail;
			}
			set
			{
				this._tb_DepartmentDetail.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tb_DepartmentDetail(tb_DepartmentDetail entity)
		{
			this.SendPropertyChanging();
			entity.tb_Department = this;
		}
		
		private void detach_tb_DepartmentDetail(tb_DepartmentDetail entity)
		{
			this.SendPropertyChanging();
			entity.tb_Department = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tb_DepartmentDetail")]
	public partial class tb_DepartmentDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DepartmentDetailNo;
		
		private string _DepartmentDetailName;
		
		private int _DepartmentNo;
		
		private EntityRef<tb_Department> _tb_Department;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDepartmentDetailNoChanging(int value);
    partial void OnDepartmentDetailNoChanged();
    partial void OnDepartmentDetailNameChanging(string value);
    partial void OnDepartmentDetailNameChanged();
    partial void OnDepartmentNoChanging(int value);
    partial void OnDepartmentNoChanged();
    #endregion
		
		public tb_DepartmentDetail()
		{
			this._tb_Department = default(EntityRef<tb_Department>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentDetailNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DepartmentDetailNo
		{
			get
			{
				return this._DepartmentDetailNo;
			}
			set
			{
				if ((this._DepartmentDetailNo != value))
				{
					this.OnDepartmentDetailNoChanging(value);
					this.SendPropertyChanging();
					this._DepartmentDetailNo = value;
					this.SendPropertyChanged("DepartmentDetailNo");
					this.OnDepartmentDetailNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentDetailName", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string DepartmentDetailName
		{
			get
			{
				return this._DepartmentDetailName;
			}
			set
			{
				if ((this._DepartmentDetailName != value))
				{
					this.OnDepartmentDetailNameChanging(value);
					this.SendPropertyChanging();
					this._DepartmentDetailName = value;
					this.SendPropertyChanged("DepartmentDetailName");
					this.OnDepartmentDetailNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentNo", DbType="Int NOT NULL")]
		public int DepartmentNo
		{
			get
			{
				return this._DepartmentNo;
			}
			set
			{
				if ((this._DepartmentNo != value))
				{
					if (this._tb_Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentNoChanging(value);
					this.SendPropertyChanging();
					this._DepartmentNo = value;
					this.SendPropertyChanged("DepartmentNo");
					this.OnDepartmentNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tb_Department_tb_DepartmentDetail", Storage="_tb_Department", ThisKey="DepartmentNo", OtherKey="DepartmentNo", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public tb_Department tb_Department
		{
			get
			{
				return this._tb_Department.Entity;
			}
			set
			{
				tb_Department previousValue = this._tb_Department.Entity;
				if (((previousValue != value) 
							|| (this._tb_Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tb_Department.Entity = null;
						previousValue.tb_DepartmentDetail.Remove(this);
					}
					this._tb_Department.Entity = value;
					if ((value != null))
					{
						value.tb_DepartmentDetail.Add(this);
						this._DepartmentNo = value.DepartmentNo;
					}
					else
					{
						this._DepartmentNo = default(int);
					}
					this.SendPropertyChanged("tb_Department");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tb_DoctorInfo")]
	public partial class tb_DoctorInfo
	{
		
		private string _DoctorNo;
		
		private string _DoctorName;
		
		private System.Nullable<int> _DepartmentDetailNo;
		
		private System.Nullable<int> _WorkWeekday;
		
		private string _WorkTime;
		
		public tb_DoctorInfo()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorNo", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string DoctorNo
		{
			get
			{
				return this._DoctorNo;
			}
			set
			{
				if ((this._DoctorNo != value))
				{
					this._DoctorNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorName", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string DoctorName
		{
			get
			{
				return this._DoctorName;
			}
			set
			{
				if ((this._DoctorName != value))
				{
					this._DoctorName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentDetailNo", DbType="Int")]
		public System.Nullable<int> DepartmentDetailNo
		{
			get
			{
				return this._DepartmentDetailNo;
			}
			set
			{
				if ((this._DepartmentDetailNo != value))
				{
					this._DepartmentDetailNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkWeekday", DbType="Int")]
		public System.Nullable<int> WorkWeekday
		{
			get
			{
				return this._WorkWeekday;
			}
			set
			{
				if ((this._WorkWeekday != value))
				{
					this._WorkWeekday = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkTime", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string WorkTime
		{
			get
			{
				return this._WorkTime;
			}
			set
			{
				if ((this._WorkTime != value))
				{
					this._WorkTime = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tb_EthnicGroup")]
	public partial class tb_EthnicGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EthnicGroupNo;
		
		private string _EthnicGroupName;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEthnicGroupNoChanging(int value);
    partial void OnEthnicGroupNoChanged();
    partial void OnEthnicGroupNameChanging(string value);
    partial void OnEthnicGroupNameChanged();
    #endregion
		
		public tb_EthnicGroup()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EthnicGroupNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int EthnicGroupNo
		{
			get
			{
				return this._EthnicGroupNo;
			}
			set
			{
				if ((this._EthnicGroupNo != value))
				{
					this.OnEthnicGroupNoChanging(value);
					this.SendPropertyChanging();
					this._EthnicGroupNo = value;
					this.SendPropertyChanged("EthnicGroupNo");
					this.OnEthnicGroupNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EthnicGroupName", DbType="Char(30) NOT NULL", CanBeNull=false)]
		public string EthnicGroupName
		{
			get
			{
				return this._EthnicGroupName;
			}
			set
			{
				if ((this._EthnicGroupName != value))
				{
					this.OnEthnicGroupNameChanging(value);
					this.SendPropertyChanging();
					this._EthnicGroupName = value;
					this.SendPropertyChanged("EthnicGroupName");
					this.OnEthnicGroupNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tb_DocumentationInformation")]
	public partial class tb_DocumentationInformation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserNo;
		
		private string _UserName;
		
		private System.Nullable<bool> _Gender;
		
		private System.Nullable<System.DateTime> _Birthday;
		
		private string _Nation;
		
		private string _Province;
		
		private string _City;
		
		private string _Country;
		
		private string _EthnicGroup;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserNoChanging(string value);
    partial void OnUserNoChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnGenderChanging(System.Nullable<bool> value);
    partial void OnGenderChanged();
    partial void OnBirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthdayChanged();
    partial void OnNationChanging(string value);
    partial void OnNationChanged();
    partial void OnProvinceChanging(string value);
    partial void OnProvinceChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnEthnicGroupChanging(string value);
    partial void OnEthnicGroupChanged();
    #endregion
		
		public tb_DocumentationInformation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserNo", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserNo
		{
			get
			{
				return this._UserNo;
			}
			set
			{
				if ((this._UserNo != value))
				{
					this.OnUserNoChanging(value);
					this.SendPropertyChanging();
					this._UserNo = value;
					this.SendPropertyChanged("UserNo");
					this.OnUserNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(20)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Bit")]
		public System.Nullable<bool> Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthday", DbType="Date")]
		public System.Nullable<System.DateTime> Birthday
		{
			get
			{
				return this._Birthday;
			}
			set
			{
				if ((this._Birthday != value))
				{
					this.OnBirthdayChanging(value);
					this.SendPropertyChanging();
					this._Birthday = value;
					this.SendPropertyChanged("Birthday");
					this.OnBirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nation", DbType="Char(50)")]
		public string Nation
		{
			get
			{
				return this._Nation;
			}
			set
			{
				if ((this._Nation != value))
				{
					this.OnNationChanging(value);
					this.SendPropertyChanging();
					this._Nation = value;
					this.SendPropertyChanged("Nation");
					this.OnNationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Province", DbType="Char(30)")]
		public string Province
		{
			get
			{
				return this._Province;
			}
			set
			{
				if ((this._Province != value))
				{
					this.OnProvinceChanging(value);
					this.SendPropertyChanging();
					this._Province = value;
					this.SendPropertyChanged("Province");
					this.OnProvinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="Char(30)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="Char(50)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EthnicGroup", DbType="Char(20)")]
		public string EthnicGroup
		{
			get
			{
				return this._EthnicGroup;
			}
			set
			{
				if ((this._EthnicGroup != value))
				{
					this.OnEthnicGroupChanging(value);
					this.SendPropertyChanging();
					this._EthnicGroup = value;
					this.SendPropertyChanged("EthnicGroup");
					this.OnEthnicGroupChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tb_ExpertInfo")]
	public partial class tb_ExpertInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExpertInfoNo;
		
		private string _Info;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExpertInfoNoChanging(int value);
    partial void OnExpertInfoNoChanged();
    partial void OnInfoChanging(string value);
    partial void OnInfoChanged();
    #endregion
		
		public tb_ExpertInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpertInfoNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExpertInfoNo
		{
			get
			{
				return this._ExpertInfoNo;
			}
			set
			{
				if ((this._ExpertInfoNo != value))
				{
					this.OnExpertInfoNoChanging(value);
					this.SendPropertyChanging();
					this._ExpertInfoNo = value;
					this.SendPropertyChanged("ExpertInfoNo");
					this.OnExpertInfoNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Info", DbType="VarChar(1000)")]
		public string Info
		{
			get
			{
				return this._Info;
			}
			set
			{
				if ((this._Info != value))
				{
					this.OnInfoChanging(value);
					this.SendPropertyChanging();
					this._Info = value;
					this.SendPropertyChanged("Info");
					this.OnInfoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tb_ItemInformation")]
	public partial class tb_ItemInformation
	{
		
		private int _ItemNo;
		
		private string _ItemName;
		
		private string _ReferenceValue;
		
		private string _Unit;
		
		public tb_ItemInformation()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemNo", DbType="Int NOT NULL")]
		public int ItemNo
		{
			get
			{
				return this._ItemNo;
			}
			set
			{
				if ((this._ItemNo != value))
				{
					this._ItemNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemName", DbType="Char(100) NOT NULL", CanBeNull=false)]
		public string ItemName
		{
			get
			{
				return this._ItemName;
			}
			set
			{
				if ((this._ItemName != value))
				{
					this._ItemName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceValue", DbType="Char(30) NOT NULL", CanBeNull=false)]
		public string ReferenceValue
		{
			get
			{
				return this._ReferenceValue;
			}
			set
			{
				if ((this._ReferenceValue != value))
				{
					this._ReferenceValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this._Unit = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tb_LimitCount")]
	public partial class tb_LimitCount
	{
		
		private string _SpecificTimePeriod;
		
		private System.Nullable<int> _LimitCount;
		
		public tb_LimitCount()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecificTimePeriod", DbType="Char(20)")]
		public string SpecificTimePeriod
		{
			get
			{
				return this._SpecificTimePeriod;
			}
			set
			{
				if ((this._SpecificTimePeriod != value))
				{
					this._SpecificTimePeriod = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LimitCount", DbType="Int")]
		public System.Nullable<int> LimitCount
		{
			get
			{
				return this._LimitCount;
			}
			set
			{
				if ((this._LimitCount != value))
				{
					this._LimitCount = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tb_Nation")]
	public partial class tb_Nation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _No;
		
		private string _NationName;
		
		private EntitySet<tb_Province> _tb_Province;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNoChanging(int value);
    partial void OnNoChanged();
    partial void OnNationNameChanging(string value);
    partial void OnNationNameChanged();
    #endregion
		
		public tb_Nation()
		{
			this._tb_Province = new EntitySet<tb_Province>(new Action<tb_Province>(this.attach_tb_Province), new Action<tb_Province>(this.detach_tb_Province));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int No
		{
			get
			{
				return this._No;
			}
			set
			{
				if ((this._No != value))
				{
					this.OnNoChanging(value);
					this.SendPropertyChanging();
					this._No = value;
					this.SendPropertyChanged("No");
					this.OnNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationName", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string NationName
		{
			get
			{
				return this._NationName;
			}
			set
			{
				if ((this._NationName != value))
				{
					this.OnNationNameChanging(value);
					this.SendPropertyChanging();
					this._NationName = value;
					this.SendPropertyChanged("NationName");
					this.OnNationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tb_Nation_tb_Province", Storage="_tb_Province", ThisKey="No", OtherKey="NationNo")]
		public EntitySet<tb_Province> tb_Province
		{
			get
			{
				return this._tb_Province;
			}
			set
			{
				this._tb_Province.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tb_Province(tb_Province entity)
		{
			this.SendPropertyChanging();
			entity.tb_Nation = this;
		}
		
		private void detach_tb_Province(tb_Province entity)
		{
			this.SendPropertyChanging();
			entity.tb_Nation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tb_PatientCheckInformation")]
	public partial class tb_PatientCheckInformation
	{
		
		private string _UserNo;
		
		private int _ItemNo;
		
		private string _ResultScore;
		
		public tb_PatientCheckInformation()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserNo", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string UserNo
		{
			get
			{
				return this._UserNo;
			}
			set
			{
				if ((this._UserNo != value))
				{
					this._UserNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemNo", DbType="Int NOT NULL")]
		public int ItemNo
		{
			get
			{
				return this._ItemNo;
			}
			set
			{
				if ((this._ItemNo != value))
				{
					this._ItemNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultScore", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string ResultScore
		{
			get
			{
				return this._ResultScore;
			}
			set
			{
				if ((this._ResultScore != value))
				{
					this._ResultScore = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tb_Payment")]
	public partial class tb_Payment
	{
		
		private string _UserNo;
		
		private string _PayItemNo;
		
		private System.Nullable<System.DateTime> _PayTime;
		
		private System.Nullable<int> _Flat;
		
		public tb_Payment()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserNo", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string UserNo
		{
			get
			{
				return this._UserNo;
			}
			set
			{
				if ((this._UserNo != value))
				{
					this._UserNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayItemNo", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string PayItemNo
		{
			get
			{
				return this._PayItemNo;
			}
			set
			{
				if ((this._PayItemNo != value))
				{
					this._PayItemNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayTime", DbType="Date")]
		public System.Nullable<System.DateTime> PayTime
		{
			get
			{
				return this._PayTime;
			}
			set
			{
				if ((this._PayTime != value))
				{
					this._PayTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Flat", DbType="Int")]
		public System.Nullable<int> Flat
		{
			get
			{
				return this._Flat;
			}
			set
			{
				if ((this._Flat != value))
				{
					this._Flat = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tb_Price")]
	public partial class tb_Price
	{
		
		private string _PayItemNo;
		
		private string _PayItemName;
		
		private decimal _Price;
		
		public tb_Price()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayItemNo", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string PayItemNo
		{
			get
			{
				return this._PayItemNo;
			}
			set
			{
				if ((this._PayItemNo != value))
				{
					this._PayItemNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayItemName", DbType="Char(100) NOT NULL", CanBeNull=false)]
		public string PayItemName
		{
			get
			{
				return this._PayItemName;
			}
			set
			{
				if ((this._PayItemName != value))
				{
					this._PayItemName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(5,2) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tb_Province")]
	public partial class tb_Province : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _No;
		
		private string _ProvinceName;
		
		private System.Nullable<int> _NationNo;
		
		private EntitySet<tb_City> _tb_City;
		
		private EntityRef<tb_Nation> _tb_Nation;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNoChanging(int value);
    partial void OnNoChanged();
    partial void OnProvinceNameChanging(string value);
    partial void OnProvinceNameChanged();
    partial void OnNationNoChanging(System.Nullable<int> value);
    partial void OnNationNoChanged();
    #endregion
		
		public tb_Province()
		{
			this._tb_City = new EntitySet<tb_City>(new Action<tb_City>(this.attach_tb_City), new Action<tb_City>(this.detach_tb_City));
			this._tb_Nation = default(EntityRef<tb_Nation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int No
		{
			get
			{
				return this._No;
			}
			set
			{
				if ((this._No != value))
				{
					this.OnNoChanging(value);
					this.SendPropertyChanging();
					this._No = value;
					this.SendPropertyChanged("No");
					this.OnNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvinceName", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string ProvinceName
		{
			get
			{
				return this._ProvinceName;
			}
			set
			{
				if ((this._ProvinceName != value))
				{
					this.OnProvinceNameChanging(value);
					this.SendPropertyChanging();
					this._ProvinceName = value;
					this.SendPropertyChanged("ProvinceName");
					this.OnProvinceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationNo", DbType="Int")]
		public System.Nullable<int> NationNo
		{
			get
			{
				return this._NationNo;
			}
			set
			{
				if ((this._NationNo != value))
				{
					if (this._tb_Nation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNationNoChanging(value);
					this.SendPropertyChanging();
					this._NationNo = value;
					this.SendPropertyChanged("NationNo");
					this.OnNationNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tb_Province_tb_City", Storage="_tb_City", ThisKey="No", OtherKey="ProvinceNo")]
		public EntitySet<tb_City> tb_City
		{
			get
			{
				return this._tb_City;
			}
			set
			{
				this._tb_City.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tb_Nation_tb_Province", Storage="_tb_Nation", ThisKey="NationNo", OtherKey="No", IsForeignKey=true, DeleteRule="CASCADE")]
		public tb_Nation tb_Nation
		{
			get
			{
				return this._tb_Nation.Entity;
			}
			set
			{
				tb_Nation previousValue = this._tb_Nation.Entity;
				if (((previousValue != value) 
							|| (this._tb_Nation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tb_Nation.Entity = null;
						previousValue.tb_Province.Remove(this);
					}
					this._tb_Nation.Entity = value;
					if ((value != null))
					{
						value.tb_Province.Add(this);
						this._NationNo = value.No;
					}
					else
					{
						this._NationNo = default(Nullable<int>);
					}
					this.SendPropertyChanged("tb_Nation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tb_City(tb_City entity)
		{
			this.SendPropertyChanging();
			entity.tb_Province = this;
		}
		
		private void detach_tb_City(tb_City entity)
		{
			this.SendPropertyChanging();
			entity.tb_Province = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tb_Registerd")]
	public partial class tb_Registerd
	{
		
		private string _UserNo;
		
		private int _DepartmentDetailNo;
		
		private System.DateTime _RegisterTime;
		
		private string _SpecificTimePeriod;
		
		public tb_Registerd()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserNo", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string UserNo
		{
			get
			{
				return this._UserNo;
			}
			set
			{
				if ((this._UserNo != value))
				{
					this._UserNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentDetailNo", DbType="Int NOT NULL")]
		public int DepartmentDetailNo
		{
			get
			{
				return this._DepartmentDetailNo;
			}
			set
			{
				if ((this._DepartmentDetailNo != value))
				{
					this._DepartmentDetailNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisterTime", DbType="Date NOT NULL")]
		public System.DateTime RegisterTime
		{
			get
			{
				return this._RegisterTime;
			}
			set
			{
				if ((this._RegisterTime != value))
				{
					this._RegisterTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecificTimePeriod", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string SpecificTimePeriod
		{
			get
			{
				return this._SpecificTimePeriod;
			}
			set
			{
				if ((this._SpecificTimePeriod != value))
				{
					this._SpecificTimePeriod = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tb_RegisterdCancelCount")]
	public partial class tb_RegisterdCancelCount
	{
		
		private string _UserNo;
		
		private System.Nullable<int> _Count;
		
		public tb_RegisterdCancelCount()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserNo", DbType="Char(10)")]
		public string UserNo
		{
			get
			{
				return this._UserNo;
			}
			set
			{
				if ((this._UserNo != value))
				{
					this._UserNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int")]
		public System.Nullable<int> Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tb_RegisterdTime")]
	public partial class tb_RegisterdTime : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _No;
		
		private string _RegisterTime;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNoChanging(int value);
    partial void OnNoChanged();
    partial void OnRegisterTimeChanging(string value);
    partial void OnRegisterTimeChanged();
    #endregion
		
		public tb_RegisterdTime()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_No", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int No
		{
			get
			{
				return this._No;
			}
			set
			{
				if ((this._No != value))
				{
					this.OnNoChanging(value);
					this.SendPropertyChanging();
					this._No = value;
					this.SendPropertyChanged("No");
					this.OnNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegisterTime", DbType="Char(20) NOT NULL", CanBeNull=false)]
		public string RegisterTime
		{
			get
			{
				return this._RegisterTime;
			}
			set
			{
				if ((this._RegisterTime != value))
				{
					this.OnRegisterTimeChanging(value);
					this.SendPropertyChanging();
					this._RegisterTime = value;
					this.SendPropertyChanged("RegisterTime");
					this.OnRegisterTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tb_Symptom")]
	public partial class tb_Symptom
	{
		
		private int _SymptomNo;
		
		private string _Symptom;
		
		private int _SuggestDepartmentDetailNo;
		
		public tb_Symptom()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymptomNo", DbType="Int NOT NULL")]
		public int SymptomNo
		{
			get
			{
				return this._SymptomNo;
			}
			set
			{
				if ((this._SymptomNo != value))
				{
					this._SymptomNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Symptom", DbType="VarChar(200)")]
		public string Symptom
		{
			get
			{
				return this._Symptom;
			}
			set
			{
				if ((this._Symptom != value))
				{
					this._Symptom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuggestDepartmentDetailNo", DbType="Int NOT NULL")]
		public int SuggestDepartmentDetailNo
		{
			get
			{
				return this._SuggestDepartmentDetailNo;
			}
			set
			{
				if ((this._SuggestDepartmentDetailNo != value))
				{
					this._SuggestDepartmentDetailNo = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tb_SymptomStype")]
	public partial class tb_SymptomStype : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SymptomStypeNo;
		
		private string _Symptom;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSymptomStypeNoChanging(int value);
    partial void OnSymptomStypeNoChanged();
    partial void OnSymptomChanging(string value);
    partial void OnSymptomChanged();
    #endregion
		
		public tb_SymptomStype()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymptomStypeNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SymptomStypeNo
		{
			get
			{
				return this._SymptomStypeNo;
			}
			set
			{
				if ((this._SymptomStypeNo != value))
				{
					this.OnSymptomStypeNoChanging(value);
					this.SendPropertyChanging();
					this._SymptomStypeNo = value;
					this.SendPropertyChanged("SymptomStypeNo");
					this.OnSymptomStypeNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Symptom", DbType="VarChar(200)")]
		public string Symptom
		{
			get
			{
				return this._Symptom;
			}
			set
			{
				if ((this._Symptom != value))
				{
					this.OnSymptomChanging(value);
					this.SendPropertyChanging();
					this._Symptom = value;
					this.SendPropertyChanged("Symptom");
					this.OnSymptomChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tb_User")]
	public partial class tb_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserNo;
		
		private string _UserName;
		
		private System.Data.Linq.Binary _Password;
		
		private bool _IsActivated;
		
		private int _LoginFailCount;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserNoChanging(string value);
    partial void OnUserNoChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(System.Data.Linq.Binary value);
    partial void OnPasswordChanged();
    partial void OnIsActivatedChanging(bool value);
    partial void OnIsActivatedChanged();
    partial void OnLoginFailCountChanging(int value);
    partial void OnLoginFailCountChanged();
    #endregion
		
		public tb_User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserNo", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserNo
		{
			get
			{
				return this._UserNo;
			}
			set
			{
				if ((this._UserNo != value))
				{
					this.OnUserNoChanging(value);
					this.SendPropertyChanging();
					this._UserNo = value;
					this.SendPropertyChanged("UserNo");
					this.OnUserNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarBinary(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActivated", DbType="Bit NOT NULL")]
		public bool IsActivated
		{
			get
			{
				return this._IsActivated;
			}
			set
			{
				if ((this._IsActivated != value))
				{
					this.OnIsActivatedChanging(value);
					this.SendPropertyChanging();
					this._IsActivated = value;
					this.SendPropertyChanged("IsActivated");
					this.OnIsActivatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginFailCount", DbType="Int NOT NULL")]
		public int LoginFailCount
		{
			get
			{
				return this._LoginFailCount;
			}
			set
			{
				if ((this._LoginFailCount != value))
				{
					this.OnLoginFailCountChanging(value);
					this.SendPropertyChanging();
					this._LoginFailCount = value;
					this.SendPropertyChanged("LoginFailCount");
					this.OnLoginFailCountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
